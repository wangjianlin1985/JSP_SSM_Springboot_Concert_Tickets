<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.chengxusheji.mapper.ConcertMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加演唱会记录 -->
	<insert id="addConcert" parameterType="concert">
		insert into t_concert(concertTypeObj,concertName,concertPhoto,concertTime,concertPlace,ycry,concertPrice,concertDesc) values 
		(#{concertTypeObj.typeId},#{concertName},#{concertPhoto},#{concertTime},#{concertPlace},#{ycry},#{concertPrice},#{concertDesc})
	</insert>

	<!-- 按照查询条件分页查询演唱会记录 -->
	<select id="queryConcert" resultMap="concertMap" >
		select t_concert.* from t_concert,t_concertType ${where} and t_concert.concertTypeObj = t_concertType.typeId limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="concertMap" type="concert">
        <id property="concertId" column="concertId" />
        <association property="concertTypeObj" column="concertTypeObj" select="com.chengxusheji.mapper.ConcertTypeMapper.getConcertType" />
    </resultMap>

    <!-- 按照查询条件查询所有演唱会记录 -->
	<select id="queryConcertList" resultMap="concertMap" >
		select t_concert.* from t_concert,t_concertType ${where} and t_concert.concertTypeObj = t_concertType.typeId
	</select>

    <!-- 按照查询条件的演唱会记录数 -->
	<select id="queryConcertCount" resultType="int">
		select count(*) from t_concert,t_concertType ${where} and t_concert.concertTypeObj = t_concertType.typeId
	</select>

	<!-- 根据主键查询某个演唱会记录 -->
	<select id="getConcert" parameterType="int" resultMap="concertMap">
		select * from t_concert where t_concert.concertId = #{concertId}
	</select>

	<!-- 更新演唱会记录 -->
	<update id="updateConcert" parameterType="concert">
		update t_concert set concertTypeObj=#{concertTypeObj.typeId},concertName=#{concertName},concertPhoto=#{concertPhoto},concertTime=#{concertTime},concertPlace=#{concertPlace},ycry=#{ycry},concertPrice=#{concertPrice},concertDesc=#{concertDesc} where concertId = #{concertId}
	</update>

	<!-- 删除演唱会记录 -->
	<delete id="deleteConcert" parameterType="int">
		delete from t_concert where concertId=#{concertId}
	</delete>

</mapper>
